<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.law.verdict.parse.dao.JudgementMapper">
  <resultMap id="BaseResultMap" type="com.law.verdict.parse.db.model.Judgement">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="doc_id" jdbcType="VARCHAR" property="docId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="pub_date" jdbcType="TIMESTAMP" property="pubDate" />
    <result column="tail_content" jdbcType="VARCHAR" property="tailContent" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.law.verdict.parse.db.model.JudgementWithBLOBs">
    <result column="head" jdbcType="LONGVARCHAR" property="head" />
    <result column="head2" jdbcType="LONGVARCHAR" property="head2" />
    <result column="facts" jdbcType="LONGVARCHAR" property="facts" />
    <result column="cause" jdbcType="LONGVARCHAR" property="cause" />
    <result column="judge_result" jdbcType="LONGVARCHAR" property="judgeResult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, doc_id, title, pub_date, tail_content
  </sql>
  <sql id="Blob_Column_List">
    head, head2, facts, cause, judge_result
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.law.verdict.parse.db.model.JudgementExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from judgement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.law.verdict.parse.db.model.JudgementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from judgement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from judgement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from judgement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.law.verdict.parse.db.model.JudgementExample">
    delete from judgement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.law.verdict.parse.db.model.JudgementWithBLOBs">
    insert into judgement (id, doc_id, title, 
      pub_date, tail_content, head, 
      head2, facts, cause, 
      judge_result)
    values (#{id,jdbcType=INTEGER}, #{docId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{pubDate,jdbcType=TIMESTAMP}, #{tailContent,jdbcType=VARCHAR}, #{head,jdbcType=LONGVARCHAR}, 
      #{head2,jdbcType=LONGVARCHAR}, #{facts,jdbcType=LONGVARCHAR}, #{cause,jdbcType=LONGVARCHAR}, 
      #{judgeResult,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.law.verdict.parse.db.model.JudgementWithBLOBs">
    insert into judgement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="docId != null">
        doc_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="pubDate != null">
        pub_date,
      </if>
      <if test="tailContent != null">
        tail_content,
      </if>
      <if test="head != null">
        head,
      </if>
      <if test="head2 != null">
        head2,
      </if>
      <if test="facts != null">
        facts,
      </if>
      <if test="cause != null">
        cause,
      </if>
      <if test="judgeResult != null">
        judge_result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="docId != null">
        #{docId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="pubDate != null">
        #{pubDate,jdbcType=TIMESTAMP},
      </if>
      <if test="tailContent != null">
        #{tailContent,jdbcType=VARCHAR},
      </if>
      <if test="head != null">
        #{head,jdbcType=LONGVARCHAR},
      </if>
      <if test="head2 != null">
        #{head2,jdbcType=LONGVARCHAR},
      </if>
      <if test="facts != null">
        #{facts,jdbcType=LONGVARCHAR},
      </if>
      <if test="cause != null">
        #{cause,jdbcType=LONGVARCHAR},
      </if>
      <if test="judgeResult != null">
        #{judgeResult,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.law.verdict.parse.db.model.JudgementExample" resultType="java.lang.Long">
    select count(*) from judgement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update judgement
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.docId != null">
        doc_id = #{record.docId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.pubDate != null">
        pub_date = #{record.pubDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tailContent != null">
        tail_content = #{record.tailContent,jdbcType=VARCHAR},
      </if>
      <if test="record.head != null">
        head = #{record.head,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.head2 != null">
        head2 = #{record.head2,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.facts != null">
        facts = #{record.facts,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.cause != null">
        cause = #{record.cause,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.judgeResult != null">
        judge_result = #{record.judgeResult,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update judgement
    set id = #{record.id,jdbcType=INTEGER},
      doc_id = #{record.docId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      pub_date = #{record.pubDate,jdbcType=TIMESTAMP},
      tail_content = #{record.tailContent,jdbcType=VARCHAR},
      head = #{record.head,jdbcType=LONGVARCHAR},
      head2 = #{record.head2,jdbcType=LONGVARCHAR},
      facts = #{record.facts,jdbcType=LONGVARCHAR},
      cause = #{record.cause,jdbcType=LONGVARCHAR},
      judge_result = #{record.judgeResult,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update judgement
    set id = #{record.id,jdbcType=INTEGER},
      doc_id = #{record.docId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      pub_date = #{record.pubDate,jdbcType=TIMESTAMP},
      tail_content = #{record.tailContent,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.law.verdict.parse.db.model.JudgementWithBLOBs">
    update judgement
    <set>
      <if test="docId != null">
        doc_id = #{docId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="pubDate != null">
        pub_date = #{pubDate,jdbcType=TIMESTAMP},
      </if>
      <if test="tailContent != null">
        tail_content = #{tailContent,jdbcType=VARCHAR},
      </if>
      <if test="head != null">
        head = #{head,jdbcType=LONGVARCHAR},
      </if>
      <if test="head2 != null">
        head2 = #{head2,jdbcType=LONGVARCHAR},
      </if>
      <if test="facts != null">
        facts = #{facts,jdbcType=LONGVARCHAR},
      </if>
      <if test="cause != null">
        cause = #{cause,jdbcType=LONGVARCHAR},
      </if>
      <if test="judgeResult != null">
        judge_result = #{judgeResult,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.law.verdict.parse.db.model.JudgementWithBLOBs">
    update judgement
    set doc_id = #{docId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      pub_date = #{pubDate,jdbcType=TIMESTAMP},
      tail_content = #{tailContent,jdbcType=VARCHAR},
      head = #{head,jdbcType=LONGVARCHAR},
      head2 = #{head2,jdbcType=LONGVARCHAR},
      facts = #{facts,jdbcType=LONGVARCHAR},
      cause = #{cause,jdbcType=LONGVARCHAR},
      judge_result = #{judgeResult,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.law.verdict.parse.db.model.Judgement">
    update judgement
    set doc_id = #{docId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      pub_date = #{pubDate,jdbcType=TIMESTAMP},
      tail_content = #{tailContent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>